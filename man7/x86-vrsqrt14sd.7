'\" t
.nh
.TH "X86-VRSQRT14SD" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
VRSQRT14SD - COMPUTE APPROXIMATE RECIPROCAL OF SQUARE ROOT OF SCALAR FLOAT64 VALUE
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32 bit Mode Support\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
T{
EVEX.LLIG.66.0F38.W1 4F /r VRSQRT14SD xmm1 {k1}{z}, xmm2, xmm3/m64
T}	A	V/V	AVX512F	T{
Computes the approximate reciprocal square root of the scalar double precision floating-point value in xmm3/m64 and stores the result in the low quadword element of xmm1 using writemask k1. Bits[127:64] of xmm2 is copied to xmm1[127:64]\&.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING  href="vrsqrt14sd.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l l l l 
l l l l l l .
\fBOp/En\fP	\fBTuple Type\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
A	Tuple1 Scalar	ModRM:reg (w)	EVEX.vvvv (r)	ModRM:r/m (r)	N/A
.TE

.SS DESCRIPTION
Computes the approximate reciprocal of the square roots of the scalar
double precision floating-point value in the low quadword element of the
source operand (the second operand) and stores the result in the low
quadword element of the destination operand (the first operand)
according to the writemask. The maximum relative error for this
approximation is less than 2-14\&. The source operand can be an
XMM register or a 32-bit memory location. The destination operand is an
XMM register.

.PP
Bits (127:64) of the XMM register destination are copied from
corresponding bits in the first source operand. Bits (MAXVL-1:128) of
the destination register are zeroed.

.PP
The VRSQRT14SD instruction is not affected by the rounding control bits
in the MXCSR register. When a source value is a 0.0, an ∞ with the sign
of the source value is returned. When the source operand is an +∞ then
+ZERO value is returned. A denormal source value is treated as zero only
if DAZ bit is set in MXCSR. Otherwise it is treated correctly and
performs the approximation with the specified masked response. When a
source value is a negative value (other than 0.0) a floating-point
QNaN_indefinite is returned. When a source value is an SNaN or QNaN,
the SNaN is converted to a QNaN or the source QNaN is returned.

.PP
MXCSR exception flags are not affected by this instruction and
floating-point exceptions are not reported.

.SS A NUMERICALLY EXACT IMPLEMENTATION OF VRSQRT14XX CAN BE FOUND AT HTTPS://SOFTWARE.INTEL.COM/EN-US/ARTI- <a
href="vrsqrt14sd.html#a-numerically-exact-implementation-of-vrsqrt14xx-can-be-found-at-https---software-intel-com-en-us-arti-"
class="anchor">¶

.SS CLES/REFERENCE-IMPLEMENTATIONS-FOR-IA-APPROXIMATION-INSTRUCTIONS-VRCP14-VRSQRT14-VRCP28-VRSQRT28-VEXP2. <a
href="vrsqrt14sd.html#cles-reference-implementations-for-ia-approximation-instructions-vrcp14-vrsqrt14-vrcp28-vrsqrt28-vexp2-"
class="anchor">¶

.SS OPERATION
.SS VRSQRT14SD (EVEX VERSION)
.EX
IF k1[0] or *no writemask*
    THEN DEST[63:0] := APPROXIMATE(1.0/ SQRT(SRC2[63:0]))
    ELSE
        IF *merging-masking* ; merging-masking
            THEN *DEST[63:0] remains unchanged*
            ELSE
                    ; zeroing-masking
                THEN DEST[63:0] := 0
        FI;
FI;
DEST[127:64] := SRC1[127:64]
DEST[MAXVL-1:128] := 0
.EE

.SS INTEL C/C++ COMPILER INTRINSIC EQUIVALENT  href="vrsqrt14sd.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
VRSQRT14SD __m128d _mm_rsqrt14_sd( __m128d a, __m128d b);

VRSQRT14SD __m128d _mm_mask_rsqrt14_sd(__m128d s, __mmask8 k, __m128d a, __m128d b);

VRSQRT14SD __m128d _mm_maskz_rsqrt14_sd( __mmask8d m, __m128d a, __m128d b);
.EE

.SS SIMD FLOATING-POINT EXCEPTIONS  href="vrsqrt14sd.html#simd-floating-point-exceptions"
class="anchor">¶

.PP
None.

.SS OTHER EXCEPTIONS
See Table 2-51, “Type E5 Class
Exception Conditions.”

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
