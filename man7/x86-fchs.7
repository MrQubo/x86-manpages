'\" t
.nh
.TH "X86-FCHS" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
FCHS - CHANGE SIGN
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode\fP	\fB\fP	\fBMode\fP	\fBLeg Mode\fP	\fBDescription\fP
D9 E0				Complements sign of ST(0).
.TE

.SH DESCRIPTION
Complements the sign bit of ST(0). This operation changes a positive
value into a negative value of equal magnitude or vice versa. The
following table shows the results obtained when changing the sign of
various classes of numbers.

.PP
.RS

.PP
* Fmeansfinitefloating-pointvalue.

.RE

.PP
This instruction’s operation is the same in non-64-bit modes and 64-bit
mode.

.SH OPERATION
.EX
SignBit(ST(0)) := NOT (SignBit(ST(0)));
.EE

.SH FPU FLAGS AFFECTED
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
C1	Set to 0.
C0, C2, C3	Undefined.
.TE

.SH FLOATING-POINT EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#IS	Stack underflow occurred.
.TE

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#NM	CR0.EM[bit 2] or CR0.TS[bit 3] = 1.
#UD	If the LOCK prefix is used.
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH VIRTUAL-8086 MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
