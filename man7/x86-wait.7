'\" t
.nh
.TH "X86-WAIT-FWAIT" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
WAIT-FWAIT - WAIT
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode\fP	\fBInstruction\fP	\fBOp/En\fP	\fB64-Bit Mode\fP	\fBCompat/Leg Mode\fP	\fBDescription\fP
9B	WAIT	ZO	Valid	Valid	T{
Check pending unmasked floating-point exceptions.
T}
9B	FWAIT	ZO	Valid	Valid	T{
Check pending unmasked floating-point exceptions.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING  href="./wait:fwait.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
Causes the processor to check for and handle pending, unmasked,
floating-point exceptions before proceeding. (FWAIT is an alternate
mnemonic for WAIT.)

.PP
This instruction is useful for synchronizing exceptions in critical
sections of code. Coding a WAIT instruction after a floating-point
instruction ensures that any unmasked floating-point exceptions the
instruction may raise are handled before the processor can modify the
instruction’s results. See the section titled “Floating-Point Exception
Synchronization” in Chapter 8 of the Intel® 64 and IA-32
Architectures Software Developer’s Manual, Volume 1, for more
information on using the WAIT/FWAIT instruction.

.PP
This instruction’s operation is the same in non-64-bit modes and 64-bit
mode.

.SH OPERATION
.EX
CheckForPendingUnmaskedFloatingPointExceptions;
.EE

.SH FPU FLAGS AFFECTED
The C0, C1, C2, and C3 flags are undefined.

.SH FLOATING-POINT EXCEPTIONS  href="./wait:fwait.html#floating-point-exceptions"
class="anchor">¶

.PP
None.

.SH PROTECTED MODE EXCEPTIONS  href="./wait:fwait.html#protected-mode-exceptions"
class="anchor">¶

.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#NM	If CR0.MP[bit 1] = 1 and CR0.TS[bit 3] = 1.
#UD	If the LOCK prefix is used.
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS  href="./wait:fwait.html#real-address-mode-exceptions"
class="anchor">¶

.PP
Same exceptions as in protected mode.

.SH VIRTUAL-8086 MODE EXCEPTIONS  href="./wait:fwait.html#virtual-8086-mode-exceptions"
class="anchor">¶

.PP
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS  href="./wait:fwait.html#compatibility-mode-exceptions"
class="anchor">¶

.PP
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
