'\" t
.nh
.TH "X86-TILERELEASE" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
TILERELEASE - RELEASE TILE
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32 bit Mode Support\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
T{
VEX.128.NP.0F38.W0 49 C0 TILERELEASE
T}	A	V/N.E.	AMX-TILE	T{
Initialize TILECFG and TILEDATA.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING  href="tilerelease.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l l l l 
l l l l l l .
\fBOp/En\fP	\fBTuple\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
A	N/A	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
This instruction returns TILECFG and TILEDATA to the INIT state.

.PP
Any attempt to execute the TILERELEASE instruction inside an Intel TSX
transaction will result in a transaction abort.

.SH OPERATION
.EX
zero_all_tile_data()
tilecfg := 0// equivalent to 64B of zeros
TILES_CONFIGURED := 0
.EE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT  href="tilerelease.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
TILERELEASE void _tile_release(void);
.EE

.SH FLAGS AFFECTED
None.

.SH EXCEPTIONS
AMX-E6; see Section 2.10, “Intel® AMX Instruction Exception Classes,”
for details.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
