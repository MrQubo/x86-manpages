'\" t
.nh
.TH "X86-RDPKRU" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
RDPKRU - READ PROTECTION KEY RIGHTS FOR USER PAGES
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode*\fP	\fBInstruction\fP	\fBOp/En\fP	\fB64/32bit Mode Support\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
NP 0F 01 EE	RDPKRU	ZO	V/V	OSPKE	Reads PKRU into EAX.
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
Reads the value of PKRU into EAX and clears EDX. ECX must be 0 when
RDPKRU is executed; otherwise, a general-protection exception (#GP)
occurs.

.PP
RDPKRU can be executed only if CR4.PKE = 1; otherwise, an invalid-opcode
exception (#UD) occurs. Software can discover the value of CR4.PKE by
examining CPUID.(EAX=07H,ECX=0H):ECX.OSPKE [bit 4]\&.

.PP
On processors that support the Intel 64 Architecture, the high-order
32-bits of RCX are ignored and the high-order 32-bits of RDX and RAX are
cleared.

.SH OPERATION
.EX
IF (ECX = 0)
    THEN
        EAX := PKRU;
        EDX := 0;
    ELSE #GP(0);
FI;
.EE

.SH FLAGS AFFECTED
None.

.SH C/C++ COMPILER INTRINSIC EQUIVALENT  href="rdpkru.html#c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
RDPKRU uint32_t _rdpkru_u32(void);
.EE

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#GP(0)	If ECX ≠ 0.
#UD	If the LOCK prefix is used.
	If CR4.PKE = 0.
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH VIRTUAL-8086 MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
