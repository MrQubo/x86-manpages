'\" t
.nh
.TH "X86-RORX" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
RORX - ROTATE RIGHT LOGICAL WITHOUT AFFECTING FLAGS
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32-bit Mode\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
T{
VEX.LZ.F2.0F3A.W0 F0 /r ib RORX r32, r/m32, imm8
T}	RMI	V/V	BMI2	T{
Rotate 32-bit r/m32 right imm8 times without affecting arithmetic flags.
T}
T{
VEX.LZ.F2.0F3A.W1 F0 /r ib RORX r64, r/m64, imm8
T}	RMI	V/N.E.	BMI2	T{
Rotate 64-bit r/m64 right imm8 times without affecting arithmetic flags.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
RMI	ModRM:reg (w)	ModRM:r/m (r)	imm8	N/A
.TE

.SH DESCRIPTION
Rotates the bits of second operand right by the count value specified in
imm8 without affecting arithmetic flags. The RORX instruction does not
read or write the arithmetic flags.

.PP
This instruction is not supported in real mode and virtual-8086 mode.
The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode
operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes.
An attempt to execute this instruction with VEX.L not equal to 0 will
cause #UD.

.SH OPERATION
.EX
IF (OperandSize = 32)
    y := imm8 AND 1FH;
    DEST := (SRC >> y) | (SRC << (32-y));
ELSEIF (OperandSize = 64 )
    y := imm8 AND 3FH;
    DEST := (SRC >> y) | (SRC << (64-y));
FI;
.EE

.SH FLAGS AFFECTED
None.

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT  href="rorx.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
Auto-generated from high-level language.
.EE

.SH SIMD FLOATING-POINT EXCEPTIONS
None.

.SH OTHER EXCEPTIONS
See Table 2-29, “Type 13 Class
Exception Conditions.”

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
