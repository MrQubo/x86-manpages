'\" t
.nh
.TH "X86-ANDN" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
ANDN - LOGICAL AND NOT
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32-bit Mode\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
T{
VEX.LZ.0F38.W0 F2 /r ANDN r32a, r32b, r/m32
T}	RVM	V/V	BMI1	T{
Bitwise AND of inverted r32b with r/m32, store result in r32a.
T}
T{
VEX.LZ. 0F38.W1 F2 /r ANDN r64a, r64b, r/m64
T}	RVM	V/N.E.	BMI1	T{
Bitwise AND of inverted r64b with r/m64, store result in r64a.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
RVM	ModRM:reg (w)	VEX.vvvv (r)	ModRM:r/m (r)	N/A
.TE

.SH DESCRIPTION
Performs a bitwise logical AND of inverted second operand (the first
source operand) with the third operand (the

.PP
second source operand). The result is stored in the first operand
(destination operand).

.PP
This instruction is not supported in real mode and virtual-8086 mode.
The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode
operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes.
An attempt to execute this instruction with VEX.L not equal to 0 will
cause #UD.

.SH OPERATION
.EX
DEST := (NOT SRC1) bitwiseAND SRC2;
SF := DEST[OperandSize -1];
ZF := (DEST = 0);
.EE

.SH FLAGS AFFECTED
SF and ZF are updated based on result. OF and CF flags are cleared. AF
and PF flags are undefined.

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT  href="andn.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
Auto-generated from high-level language.
.EE

.SH SIMD FLOATING-POINT EXCEPTIONS
None.

.SH OTHER EXCEPTIONS
See Table 2-29, “Type 13 Class
Exception Conditions.”

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
