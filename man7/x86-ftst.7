'\" t
.nh
.TH "X86-FTST" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
FTST - TEST
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode\fP	\fB\fP	\fBMode\fP	\fBLeg Mode\fP	\fBDescription\fP
D9 E4				Compare ST(0) with 0.0.
.TE

.SH DESCRIPTION
Compares the value in the ST(0) register with 0.0 and sets the condition
code flags C0, C2, and C3 in the FPU status word according to the
results (see table below).

.PP
This instruction performs an “unordered comparison.” An unordered
comparison also checks the class of the numbers being compared (see
“FXAM—Examine Floating-Point” in this chapter). If the value in register
ST(0) is a NaN or is in an undefined format, the condition flags are set
to “unordered” and the invalid operation exception is generated.

.PP
The sign of zero is ignored, so that (– 0.0 := +0.0).

.PP
This instruction’s operation is the same in non-64-bit modes and 64-bit
mode.

.SH OPERATION
.EX
CASE (relation of operands) OF
    Not comparable:
        C3, C2, C0 := 111;
    ST(0) > 0.0:
        C3, C2, C0 := 000;
    ST(0) < 0.0:
        C3, C2, C0 := 001;
    ST(0) = 0.0:
        C3, C2, C0 := 100;
ESAC;
.EE

.SH FPU FLAGS AFFECTED
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
C1	Set to 0.
C0, C2, C3	See Table 3-40.
.TE

.SH FLOATING-POINT EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#IS	Stack underflow occurred.
#IA	T{
The source operand is a NaN value or is in an unsupported format.
T}
#D	T{
The source operand is a denormal value.
T}
.TE

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#NM	CR0.EM[bit 2] or CR0.TS[bit 3] = 1.
#MF	T{
If there is a pending x87 FPU exception.
T}
#UD	If the LOCK prefix is used.
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH VIRTUAL-8086 MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
