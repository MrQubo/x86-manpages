'\" t
.nh
.TH "X86-SHA1NEXTE" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
SHA1NEXTE - CALCULATE SHA1 STATE VARIABLE E AFTER FOUR ROUNDS
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32 bit Mode Support\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
T{
NP 0F 38 C8 /r SHA1NEXTE xmm1, xmm2/m128
T}	RM	V/V	SHA	T{
Calculates SHA1 state variable E after four rounds of operation from the current SHA1 state variable A in xmm1. The calculated value of the SHA1 state variable E is added to the scheduled dwords in xmm2/m128, and stored with some of the scheduled dwords in xmm1.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING  href="sha1nexte.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l l 
l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP
RM	ModRM:reg (r, w)	ModRM:r/m (r)	N/A
.TE

.SH DESCRIPTION
The SHA1NEXTE calculates the SHA1 state variable E after four rounds of
operation from the current SHA1 state variable A in the destination
operand. The calculated value of the SHA1 state variable E is added to
the source operand, which contains the scheduled dwords.

.SH OPERATION
.SS SHA1NEXTE
.EX
TMP := (SRC1[127:96] ROL 30);
DEST[127:96] := SRC2[127:96] + TMP;
DEST[95:64] := SRC2[95:64];
DEST[63:32] := SRC2[63:32];
DEST[31:0] := SRC2[31:0];
.EE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT  href="sha1nexte.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
SHA1NEXTE __m128i _mm_sha1nexte_epu32(__m128i, __m128i);
.EE

.SH FLAGS AFFECTED
None.

.SH SIMD FLOATING-POINT EXCEPTIONS  href="sha1nexte.html#simd-floating-point-exceptions"
class="anchor">¶

.PP
None.

.SH OTHER EXCEPTIONS
See Table 2-21, “Type 4 Class
Exception Conditions.”

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
