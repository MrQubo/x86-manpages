'\" t
.nh
.TH "X86-CBW-CWDE-CDQE" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
CBW-CWDE-CDQE - CONVERT BYTE TO WORD-CONVERT WORD TO DOUBLEWORD-CONVERT DOUBLEWORD TOQUADWORD
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode\fP	\fBInstruction\fP	\fBOp/En\fP	\fB64-bit Mode\fP	\fBCompat/Leg Mode\fP	\fBDescription\fP
98	CBW	ZO	Valid	Valid	AX := sign-extend of AL.
98	CWDE	ZO	Valid	Valid	EAX := sign-extend of AX.
REX.W + 98	CDQE	ZO	Valid	N.E.	RAX := sign-extend of EAX.
.TE

.SH INSTRUCTION OPERAND ENCODING  href="./cbw:cwde:cdqe.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
Double the size of the source operand by means of sign extension. The
CBW (convert byte to word) instruction copies the sign (bit 7) in the
source operand into every bit in the AH register. The CWDE (convert word
to double-word) instruction copies the sign (bit 15) of the word in the
AX register into the high 16 bits of the EAX register.

.PP
CBW and CWDE reference the same opcode. The CBW instruction is intended
for use when the operand-size attribute is 16; CWDE is intended for use
when the operand-size attribute is 32. Some assemblers may force the
operand size. Others may treat these two mnemonics as synonyms
(CBW/CWDE) and use the setting of the operand-size attribute to
determine the size of values to be converted.

.PP
In 64-bit mode, the default operation size is the size of the
destination register. Use of the REX.W prefix promotes this instruction
(CDQE when promoted) to operate on 64-bit operands. In which case, CDQE
copies the sign (bit 31) of the doubleword in the EAX register into the
high 32 bits of RAX.

.SH OPERATION
.EX
IF OperandSize = 16 (* Instruction = CBW *)
    THEN
        AX := SignExtend(AL);
    ELSE IF (OperandSize = 32, Instruction = CWDE)
        EAX := SignExtend(AX); FI;
    ELSE (* 64-Bit Mode, OperandSize = 64, Instruction = CDQE*)
        RAX := SignExtend(EAX);
FI;
.EE

.SH FLAGS AFFECTED
None.

.SH EXCEPTIONS (ALL OPERATING MODES)  href="./cbw:cwde:cdqe.html#exceptions--all-operating-modes-"
class="anchor">¶

.PP
#UD If the LOCK prefix is used.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
