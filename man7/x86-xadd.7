'\" t
.nh
.TH "X86-XADD" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
XADD - EXCHANGE AND ADD
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode\fP	\fBInstruction\fP	\fBOp/En\fP	\fB64-Bit Mode\fP	\fBCompat/Leg Mode\fP	\fBDescription\fP
0F C0 /r	XADD r/m8, r8	MR	Valid	Valid	T{
Exchange r8 and r/m8; load sum into r/m8.
T}
REX + 0F C0 /r	XADD r/m8*, r8*	MR	Valid	N.E.	T{
Exchange r8 and r/m8; load sum into r/m8.
T}
0F C1 /r	XADD r/m16, r16	MR	Valid	Valid	T{
Exchange r16 and r/m16; load sum into r/m16.
T}
0F C1 /r	XADD r/m32, r32	MR	Valid	Valid	T{
Exchange r32 and r/m32; load sum into r/m32.
T}
REX.W + 0F C1 /r	XADD r/m64, r64	MR	Valid	N.E.	T{
Exchange r64 and r/m64; load sum into r/m64.
T}
.TE

.PP
.RS

.PP
*
In64-bitmode,r/m8cannotbeencodedtoaccessthefollowingbyteregistersifaREXprefixisused:AH,BH,CH,DH.

.RE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
MR	ModRM:r/m (r, w)	ModRM:reg (r, w)	N/A	N/A
.TE

.SH DESCRIPTION
Exchanges the first operand (destination operand) with the second
operand (source operand), then loads the sum of the two values into the
destination operand. The destination operand can be a register or a
memory location; the source operand is a register.

.PP
In 64-bit mode, the instruction’s default operation size is 32 bits.
Using a REX prefix in the form of REX.R permits access to additional
registers (R8-R15). Using a REX prefix in the form of REX.W promotes
operation to 64 bits. See the summary chart at the beginning of this
section for encoding data and limits.

.PP
This instruction can be used with a LOCK prefix to allow the instruction
to be executed atomically.

.SH IA-32 ARCHITECTURE COMPATIBILITY  href="xadd.html#ia-32-architecture-compatibility"
class="anchor">¶

.PP
IA-32 processors earlier than the Intel486 processor do not recognize
this instruction. If this instruction is used, you should provide an
equivalent code sequence that runs on earlier processors.

.SH OPERATION
.EX
TEMP := SRC + DEST;
SRC := DEST;
DEST := TEMP;
.EE

.SH FLAGS AFFECTED
The CF, PF, AF, SF, ZF, and OF flags are set according to the result of
the addition, which is stored in the destination operand.

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#GP(0)	T{
If the destination is located in a non-writable segment.
T}
	T{
If a memory operand effective address is outside the CS, DS, ES, FS, or GS segment limit.
T}
	T{
If the DS, ES, FS, or GS register contains a NULL segment selector.
T}
#SS(0)	T{
If a memory operand effective address is outside the SS segment limit.
T}
#PF(fault-code)	If a page fault occurs.
#AC(0)	T{
If alignment checking is enabled and an unaligned memory reference is made while the current privilege level is 3.
T}
#UD	T{
If the LOCK prefix is used but the destination is not a memory operand.
T}
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#GP	T{
If a memory operand effective address is outside the CS, DS, ES, FS, or GS segment limit.
T}
#SS	T{
If a memory operand effective address is outside the SS segment limit.
T}
#UD	T{
If the LOCK prefix is used but the destination is not a memory operand.
T}
.TE

.SH VIRTUAL-8086 MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#GP(0)	T{
If a memory operand effective address is outside the CS, DS, ES, FS, or GS segment limit.
T}
#SS(0)	T{
If a memory operand effective address is outside the SS segment limit.
T}
#PF(fault-code)	If a page fault occurs.
#AC(0)	T{
If alignment checking is enabled and an unaligned memory reference is made.
T}
#UD	T{
If the LOCK prefix is used but the destination is not a memory operand.
T}
.TE

.SH COMPATIBILITY MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#SS(0)	T{
If a memory address referencing the SS segment is in a non-canonical form.
T}
#GP(0)	T{
If the memory address is in a non-canonical form.
T}
#PF(fault-code)	If a page fault occurs.
#AC(0)	T{
If alignment checking is enabled and an unaligned memory reference is made while the current privilege level is 3.
T}
#UD	T{
If the LOCK prefix is used but the destination is not a memory operand.
T}
.TE

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
