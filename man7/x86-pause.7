'\" t
.nh
.TH "X86-PAUSE" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
PAUSE - SPIN LOOP HINT
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode\fP	\fBInstruction\fP	\fBOp/En\fP	\fB64-Bit Mode\fP	\fBCompat/Leg Mode\fP	\fBDescription\fP
F3 90	PAUSE	ZO	Valid	Valid	T{
Gives hint to processor that improves performance of spin-wait loops.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
Improves the performance of spin-wait loops. When executing a “spin-wait
loop,” processors will suffer a severe performance penalty when exiting
the loop because it detects a possible memory order violation. The PAUSE
instruction provides a hint to the processor that the code sequence is a
spin-wait loop. The processor uses this hint to avoid the memory order
violation in most situations, which greatly improves processor
performance. For this reason, it is recommended that a PAUSE instruction
be placed in all spin-wait loops.

.PP
An additional function of the PAUSE instruction is to reduce the power
consumed by a processor while executing a spin loop. A processor can
execute a spin-wait loop extremely quickly, causing the processor to
consume a lot of power while it waits for the resource it is spinning on
to become available. Inserting a pause instruction in a spin-wait loop
greatly reduces the processor’s power consumption.

.PP
This instruction was introduced in the Pentium 4 processors, but is
backward compatible with all IA-32 processors. In earlier IA-32
processors, the PAUSE instruction operates like a NOP instruction. The
Pentium 4 and Intel Xeon processors implement the PAUSE instruction as a
delay. The delay is finite and can be zero for some processors. This
instruction does not change the architectural state of the processor
(that is, it performs essentially a delaying no-op operation).

.PP
This instruction’s operation is the same in non-64-bit modes and 64-bit
mode.

.SH OPERATION
.EX
Execute_Next_Instruction(DELAY);
.EE

.SH NUMERIC EXCEPTIONS
None.

.SH EXCEPTIONS (ALL OPERATING MODES)  href="pause.html#exceptions--all-operating-modes-"
class="anchor">¶

.PP
#UD If the LOCK prefix is used.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
