'\" t
.nh
.TH "X86-STI" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
STI - SET INTERRUPT FLAG
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode\fP	\fBInstruction\fP	\fBOp/En\fP	\fB64-Bit Mode\fP	\fBCompat/Leg Mode\fP	\fBDescription\fP
FB	STI	ZO	Valid	Valid	T{
Set interrupt flag; external, maskable interrupts enabled at the end of the next instruction.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
In most cases, STI sets the interrupt flag (IF) in the EFLAGS register.
This allows the processor to respond to maskable hardware interrupts.

.PP
If IF = 0, maskable hardware interrupts remain inhibited on the
instruction boundary following an execution of STI. (The delayed effect
of this instruction is provided to allow interrupts to be enabled just
before returning from a procedure or subroutine. For instance, if an STI
instruction is followed by an RET instruction, the RET instruction is
allowed to execute before external interrupts are recognized. No
interrupts can be recognized if an execution of CLI immediately follow
such an execution of STI.) The inhibition ends after delivery of another
event (e.g., exception) or the execution of the next instruction.

.PP
The IF flag and the STI and CLI instructions do not prohibit the
generation of exceptions and nonmaskable interrupts (NMIs). However,
NMIs (and system-management interrupts) may be inhibited on the
instruction boundary following an execution of STI that begins with IF =
0.

.PP
Operation is different in two modes defined as follows:
.IP \(bu 2
\fBPVI mode\fP (protected-mode virtual interrupts): CR0.PE = 1,
EFLAGS.VM = 0, CPL = 3, and CR4.PVI = 1;
.IP \(bu 2
\fBVME mode\fP (virtual-8086 mode extensions): CR0.PE = 1, EFLAGS.VM =
1, and CR4.VME = 1.

.PP
If IOPL &lt; 3, EFLAGS.VIP = 1, and either VME mode or PVI mode is
active, STI sets the VIF flag in the EFLAGS register, leaving IF
unaffected.

.PP
Table 4-19
\[la]sti.html#tbl\-4\-19\[ra] indicates the action of the STI
instruction depending on the processor operating mode, IOPL, CPL, and
EFLAGS.VIP.

.PP
.RS

.PP
1\&. X = This setting has no effect on instruction operation.

.RE

.PP
2\&. For this table, “protected mode” applies whenever CR0.PE = 1 and
EFLAGS.VM = 0; it includes compatibility mode and 64-bit mode.

.PP
3\&. PVI mode and virtual-8086 mode each imply CPL = 3.

.SH OPERATION
.EX
IF CR0.PE = 0 (* Executing in real-address mode *)
    THEN IF := 1; (* Set Interrupt Flag *)
    ELSE
        IF IOPL ≥ CPL (* CPL = 3 if EFLAGS.VM = 1 *)
            THEN IF := 1; (* Set Interrupt Flag *)
            ELSE
                IF VME mode OR PVI mode
                    THEN
                        IF EFLAGS.VIP = 0
                            THEN VIF := 1; (* Set Virtual Interrupt Flag *)
                            ELSE #GP(0);
                        FI;
                    ELSE #GP(0);
                FI;
        FI;
FI;
.EE

.SH FLAGS AFFECTED
Either the IF flag or the VIF flag is set to 1. Other flags are
unaffected.

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#GP(0)	T{
If CPL is greater than IOPL and PVI mode is not active.
T}
	T{
If CPL is greater than IOPL and EFLAGS.VIP = 1.
T}
#UD	If the LOCK prefix is used.
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#UD	If the LOCK prefix is used.
.TE

.SH VIRTUAL-8086 MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#GP(0)	T{
If IOPL is less than 3 and VME mode is not active.
T}
	T{
If IOPL is less than 3 and EFLAGS.VIP = 1.
T}
#UD	If the LOCK prefix is used.
.TE

.SH COMPATIBILITY MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
