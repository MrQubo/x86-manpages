'\" t
.nh
.TH "X86-LAHF" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
LAHF - LOAD STATUS FLAGS INTO AH REGISTER
.TS
allbox;
l l l l l l 
l l l l l l .
\fBOpcode\fP	\fB\fP	\fBEn\fP	\fBMode\fP	\fBLeg Mode\fP	\fBDescription\fP
9F					T{
Load: AH := EFLAGS(SF:ZF:0:AF:0:PF:1:CF).
T}
.TE

.PP
1\&. Valid in specific steppings; see Description section.

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
This instruction executes as described above in compatibility mode and
legacy mode. It is valid in 64-bit mode only if
CPUID.80000001H:ECX.LAHF-SAHF[bit 0] = 1.

.SH OPERATION
.EX
IF 64-Bit Mode
    THEN
        IF CPUID.80000001H:ECX.LAHF-SAHF[bit 0] = 1;
            THEN AH := RFLAGS(SF:ZF:0:AF:0:PF:1:CF);
            ELSE #UD;
        FI;
    ELSE
        AH := EFLAGS(SF:ZF:0:AF:0:PF:1:CF);
FI;
.EE

.SH FLAGS AFFECTED
None. The state of the flags in the EFLAGS register is not affected.

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#UD	If the LOCK prefix is used.
.TE

.SH REAL-ADDRESS MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH VIRTUAL-8086 MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
Same exceptions as in protected mode.

.SH 64-BIT MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#UD	T{
If CPUID.80000001H:ECX.LAHF-SAHF[bit 0] = 0.
T}
	If the LOCK prefix is used.
.TE

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
