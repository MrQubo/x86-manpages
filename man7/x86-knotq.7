'\" t
.nh
.TH "X86-KNOTW-KNOTB-KNOTQ-KNOTD" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
KNOTW-KNOTB-KNOTQ-KNOTD - NOT MASK REGISTER
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32 bit Mode Support\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
T{
VEX.L0.0F.W0 44 /r KNOTW k1, k2
T}	RR	V/V	AVX512F	T{
Bitwise NOT of 16 bits mask k2.
T}
T{
VEX.L0.66.0F.W0 44 /r KNOTB k1, k2
T}	RR	V/V	AVX512DQ	Bitwise NOT of 8 bits mask k2.
T{
VEX.L0.0F.W1 44 /r KNOTQ k1, k2
T}	RR	V/V	AVX512BW	T{
Bitwise NOT of 64 bits mask k2.
T}
T{
VEX.L0.66.0F.W1 44 /r KNOTD k1, k2
T}	RR	V/V	AVX512BW	T{
Bitwise NOT of 32 bits mask k2.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING  href="./knotw:knotb:knotq:knotd.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l 
l l l .
\fBOp/En\fP	\fBOperand 1\fP	\fBOperand 2\fP
RR	ModRM:reg (w)	ModRM:r/m (r, ModRM:[7:6] must be 11b)
.TE

.SH DESCRIPTION  href="./knotw:knotb:knotq:knotd.html#description"
class="anchor">¶

.PP
Performs a bitwise NOT of vector mask k2 and writes the result into
vector mask k1.

.SH OPERATION
.SS KNOTW
.EX
DEST[15:0] := BITWISE NOT SRC[15:0]
DEST[MAX_KL-1:16] := 0
.EE

.SS KNOTB
.EX
DEST[7:0] := BITWISE NOT SRC[7:0]
DEST[MAX_KL-1:8] := 0
.EE

.SS KNOTQ
.EX
DEST[63:0] := BITWISE NOT SRC[63:0]
DEST[MAX_KL-1:64] := 0
.EE

.SS KNOTD
.EX
DEST[31:0] := BITWISE NOT SRC[31:0]
DEST[MAX_KL-1:32] := 0
.EE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT <a
href="./knotw:knotb:knotq:knotd.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
KNOTW __mmask16 _mm512_knot(__mmask16 a);
.EE

.SH FLAGS AFFECTED  href="./knotw:knotb:knotq:knotd.html#flags-affected"
class="anchor">¶

.PP
None.

.SH SIMD FLOATING-POINT EXCEPTIONS  href="./knotw:knotb:knotq:knotd.html#simd-floating-point-exceptions"
class="anchor">¶

.PP
None.

.SH OTHER EXCEPTIONS  href="./knotw:knotb:knotq:knotd.html#other-exceptions"
class="anchor">¶

.PP
See Table 2-63, “TYPE K20 Exception
Definition (VEX-Encoded OpMask Instructions w/o Memory Arg).”

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
