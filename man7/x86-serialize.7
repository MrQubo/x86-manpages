'\" t
.nh
.TH "X86-SERIALIZE" "7" "December 2023" "Intel" "Intel x86-64 ISA Manual"
.SH NAME
SERIALIZE - SERIALIZE INSTRUCTION EXECUTION
.TS
allbox;
l l l l l 
l l l l l .
\fBOpcode/Instruction\fP	\fBOp/En\fP	\fB64/32 bit Mode Support\fP	\fBCPUID Feature Flag\fP	\fBDescription\fP
NP 0F 01 E8 SERIALIZE	ZO	V/V	SERIALIZE	T{
Serialize instruction fetch and execution.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING  href="serialize.html#instruction-operand-encoding"
class="anchor">¶

.TS
allbox;
l l l l l l 
l l l l l l .
\fBOp/En\fP	\fBTuple\fP	\fBOperand 1\fP	\fBOperand 2\fP	\fBOperand 3\fP	\fBOperand 4\fP
ZO	N/A	N/A	N/A	N/A	N/A
.TE

.SH DESCRIPTION
Serializes instruction execution. Before the next instruction is fetched
and executed, the SERIALIZE instruction ensures that all modifications
to flags, registers, and memory by previous instructions are completed,
draining all buffered writes to memory. This instruction is also a
serializing instruction as defined in the section “Serializing
Instructions” in Chapter 9 of the Intel® 64 and IA-32
Architectures Software Developer’s Manual, Volume 3A.

.PP
SERIALIZE does not modify registers, arithmetic flags, or memory.

.SH OPERATION
.EX
Wait_On_Fetch_And_Execution_Of_Next_Instruction_Until(preceding_instructions_complete_and_preceding_stores_globally_visible);
.EE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT  href="serialize.html#intel-c-c++-compiler-intrinsic-equivalent"
class="anchor">¶

.EX
SERIALIZE void _serialize(void);
.EE

.SH SIMD FLOATING-POINT EXCEPTIONS  href="serialize.html#simd-floating-point-exceptions"
class="anchor">¶

.PP
None.

.SH OTHER EXCEPTIONS
.TS
allbox;
l l 
l l .
\fB\fP	\fB\fP
#UD	If the LOCK prefix is used.
	If CPUID.07H.0H:EDX.SERIALIZE[bit 14] = 0.
.TE

.SH COLOPHON
This UNOFFICIAL, mechanically-separated, non-verified reference is
provided for convenience, but it may be
incomplete or
broken in various obvious or non-obvious ways.
Refer to Intel® 64 and IA-32 Architectures Software Developer’s
Manual
\[la]https://software.intel.com/en\-us/download/intel\-64\-and\-ia\-32\-architectures\-sdm\-combined\-volumes\-1\-2a\-2b\-2c\-2d\-3a\-3b\-3c\-3d\-and\-4\[ra]
for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/MrQubo/x86-manpages.
